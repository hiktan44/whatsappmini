{"raw_content": "{\n  \"data\": {\n    \"extracted_information\": \"Bu içerik, Role-Based Access Control (RBAC) sistem tasarımına odaklanmakta ve RBAC'nin temel kavramlarını, yaygın tasarım modellerini ve gerçek projelerde nasıl uygulanacağını detaylandırmaktadır. Ayrıca, RBAC'nin kullanıcı arayüzü (UI) üzerindeki etkilerine dair pratik örnekler sunmaktadır.\",\n    \"specifications\": {\n      \"rbac_temel_kavramlari\": {\n        \"Kullanici\": \"Sistemi kullanan birey (çalışan, harici iş ortağı, sistem hesabı). Bir veya daha fazla role atanabilir.\",\n        \"Rol\": \"Bir iş fonksiyonunu veya sorumluluğu temsil eder (örn. Satış Temsilcisi, Satış Yöneticisi, Yönetici). Bir kişinin değil, izinlerin soyut bir gruplandırmasıdır.\",\n        \"Izin\": \"Bir kaynak üzerinde hangi eylemin yapılabileceğini tanımlar (örn. Oku, Oluştur, Düzenle/Güncelle, Sil, Onayla, dışa aktar, yazdır).\",\n        \"Kaynak\": \"Erişilen veya kontrol edilen nesne (örn. Müşteri veritabanı, Sözleşmeler, Finansal raporlar, Dosyalar, kayıtlar veya UI modülleri).\"\n      },\n      \"rbac_tasarim_modelleri\": [\n        {\n          \"baslik\": \"1. Rolleri Tanımlayın\",\n          \"aciklama\": \"Her rol, benzer sorumluluklara ve erişim gereksinimlerine sahip bir kullanıcı grubunu temsil eder. Organizasyon yapısına (Satış, Finans, İK) veya fonksiyonel sorumluluklara (Veri Girişi, İnceleyici, Yönetici) göre tanımlanabilir. Örnek: Satış Temsilcisi, Ekip Lideri, İK Yöneticisi. Yönetilebilir sayıda rol tutulması tavsiye edilir.\"\n        },\n        {\n          \"baslik\": \"2. Kaynakları ve Eylemleri Tanımlayın\",\n          \"aciklama\": \"Erişim kontrolü gerektiren sisteminizdeki kaynakları (örn. Müşteri Verileri, Sözleşme Yönetimi, Onay İş Akışları, Finansal Raporlar) ve bunlar üzerinde yapılabilecek eylemleri (örn. Görüntüle (Oku), Oluştur, Düzenle (Güncelle), Sil, Onayla, Dışa Aktar) belirleyin.\"\n        },\n        {\n          \"baslik\": \"3. İzinleri Rollere Eşleştirin\",\n          \"aciklama\": \"Roller, kaynaklar ve eylemler tanımlandıktan sonra, izinler rollere atanır. Her rolün hangi kaynaklara erişebileceği ve bu kaynaklarda hangi eylemlere izin verildiği belirlenir. Çoklu rol ataması ve rol kalıtımı gibi konular değerlendirilir. Örnek: Satış Temsilcisi kendi müşterilerini görüntüleyebilir ve oluşturabilir; Ekip Lideri tüm müşterileri görüntüleyebilir, potansiyel müşterileri atayabilir ve anlaşmaları onaylayabilir.\"\n        },\n        {\n          \"baslik\": \"4. Alan Düzeyi ve Koşullu İzinleri Uygulayın\",\n          \"aciklama\": \"Daha granüler kontrol için kullanılır. Alan Düzeyi İzinler (örn. İK, tüm çalışan kayıtlarını görebilir ancak maaş alanlarını yalnızca kendi departmanları için düzenleyebilir) ve Koşullu İzinler (örn. Satış temsilcileri yalnızca oluşturdukları kayıtları görüntüleyebilir veya düzenleyebilir) içerir.\"\n        }\n      ]\n    },\n    \"pricing\": {},\n    \"features\": [\n      {\n        \"baslik\": \"Gerçek Projelerde RBAC Uygulaması (NocoBase Örneği)\",\n        \"adımlar\": [\n          \"1. Sistemi Kimler Kullanacak?: Tüm kullanıcıları merkezi olarak yönetin (örn. NocoBase'de Kullanıcılar ve İzinler modülü). Kullanıcıları departmanlara göre organize edebilirsiniz (örn. 'Satış' departmanı altında satış temsilcileri).\",\n          \"2. Rolleri Nelerdir?: Farklı kullanıcı türleri için roller tanımlayın (örn. Satış, Satış Yöneticisi, Yönetici). Her rol bir veya daha fazla kullanıcıya atanabilir.\",\n          \"3. Hangi Verilere Erişebilir ve Değiştirebilirler?: Müşteriler, Potansiyel Müşteriler ve Fırsatlar gibi temel veri koleksiyonları için her rolün izinlerini yapılandırın (örn. veri ekleme, görüntüleme, düzenleme, silme, içe/dışa aktarma veya sadece kendi oluşturdukları kayıtlara erişim).\",\n          \"4. Hangi Modülleri Görmeliler?: Her rol için hangi sayfa modüllerinin görünür olacağını kontrol edin (masaüstü ve mobil dahil). Örnek: Satış ekibi sadece müşteri yönetimi ve takip kayıtlarını görebilir; Satış Yöneticileri panoları ve onay merkezlerini görebilir.\",\n          \"5. İzinler Organizasyon Yapısına Nasıl Tepki Vermelidir?: Rolleri ve departmanları kullanarak daha dinamik kontrol için koşullu izinler tanımlayın (örn. Kullanıcılar yalnızca kendi departmanlarındaki verileri görüntüleyebilir; Yöneticiler yalnızca doğrudan raporları tarafından gönderilen potansiyel müşterileri onaylayabilir).\"\n        ]\n      },\n      {\n        \"baslik\": \"İyi Tasarlanmış Bir İzin Sisteminin Özellikleri\",\n        \"liste\": [\n          \"Net Yapı: Kimin neye erişebileceği ve hangi eylemleri yapabileceği kolayca anlaşılır olmalı.\",\n          \"Esnek Yapılandırma: Organizasyonel değişikliklere ve gelişen iş ihtiyaçlarına uyarlanabilir olmalı.\",\n          \"Sürdürülebilirlik: Geliştirici olmayanlar için yapılandırmaya ve yönetime erişilebilir olmalı.\"\n        ]\n      }\n    },\n    \"statistics\": {},\n    \"temporal_info\": {\n      \"yayim_tarihi\": \"Temmuz 2025\"\n    },\n    \"geographical_data\": {},\n    \"references\": [\n      \"Orijinal Yayın: How to Design an RBAC (Role-Based Access Control) System — NocoBase (https://www.nocobase.com/en/blog/how-to-design-rbac-role-based-access-control-system)\",\n      \"İlgili Okuma: How to Build Efficient CRUD Applications? (https://www.nocobase.com/en/blog/how-to-build-efficient-crud-apps)\",\n      \"NocoBase CRM Demo: https://www.nocobase.com/en/solutions/crm\"\n    ]\n  }\n}"}